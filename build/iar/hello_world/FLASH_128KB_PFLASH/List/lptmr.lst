###############################################################################
#                                                                             #
#                                                       21/Sep/2012  08:53:16 #
# IAR ANSI C/C++ Compiler V6.40.2.23884/W32 EVALUATION for ARM                #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Documents and Settings\kk\桌面\kinetis_sc\src\drivers #
#                    \lptmr\lptmr.c                                           #
#    Command line =  "C:\Documents and Settings\kk\桌面\kinetis_sc\src\driver #
#                    s\lptmr\lptmr.c" -D IAR -D TOWER -D TWR_K20D50M -lCN     #
#                    "C:\Documents and Settings\kk\桌面\kinetis_sc\build\iar\ #
#                    hello_world\FLASH_128KB_PFLASH\List\" -lB "C:\Documents  #
#                    and Settings\kk\桌面\kinetis_sc\build\iar\hello_world\FL #
#                    ASH_128KB_PFLASH\List\" -o "C:\Documents and             #
#                    Settings\kk\桌面\kinetis_sc\build\iar\hello_world\FLASH_ #
#                    128KB_PFLASH\Obj\" --no_cse --no_unroll --no_inline      #
#                    --no_code_motion --no_tbaa --no_clustering               #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "C:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.4                           #
#                    Evaluation\arm\INC\c\DLib_Config_Full.h" -I              #
#                    "C:\Documents and Settings\kk\桌面\kinetis_sc\build\iar\ #
#                    hello_world\..\..\..\src\projects\hello_world\" -I       #
#                    "C:\Documents and Settings\kk\桌面\kinetis_sc\build\iar\ #
#                    hello_world\..\..\..\src\common\" -I "C:\Documents and   #
#                    Settings\kk\桌面\kinetis_sc\build\iar\hello_world\..\..\ #
#                    ..\src\cpu\" -I "C:\Documents and                        #
#                    Settings\kk\桌面\kinetis_sc\build\iar\hello_world\..\..\ #
#                    ..\src\cpu\headers\" -I "C:\Documents and                #
#                    Settings\kk\桌面\kinetis_sc\build\iar\hello_world\..\..\ #
#                    ..\src\drivers\uart\" -I "C:\Documents and               #
#                    Settings\kk\桌面\kinetis_sc\build\iar\hello_world\..\..\ #
#                    ..\src\drivers\mcg\" -I "C:\Documents and                #
#                    Settings\kk\桌面\kinetis_sc\build\iar\hello_world\..\..\ #
#                    ..\src\drivers\wdog\" -I "C:\Documents and               #
#                    Settings\kk\桌面\kinetis_sc\build\iar\hello_world\..\..\ #
#                    ..\src\drivers\rcm\" -I "C:\Documents and                #
#                    Settings\kk\桌面\kinetis_sc\build\iar\hello_world\..\..\ #
#                    ..\src\drivers\rtc\" -I "C:\Documents and                #
#                    Settings\kk\桌面\kinetis_sc\build\iar\hello_world\..\..\ #
#                    ..\src\drivers\smc\" -I "C:\Documents and                #
#                    Settings\kk\桌面\kinetis_sc\build\iar\hello_world\..\..\ #
#                    ..\src\drivers\llwu\" -I "C:\Documents and               #
#                    Settings\kk\桌面\kinetis_sc\build\iar\hello_world\..\..\ #
#                    ..\src\drivers\lptmr\" -I "C:\Documents and              #
#                    Settings\kk\桌面\kinetis_sc\build\iar\hello_world\..\..\ #
#                    ..\src\drivers\pmc\" -I "C:\Documents and                #
#                    Settings\kk\桌面\kinetis_sc\build\iar\hello_world\..\..\ #
#                    ..\src\platforms\" -I "C:\Documents and                  #
#                    Settings\kk\桌面\kinetis_sc\build\iar\hello_world\..\"   #
#                    -On --ropi --use_c++_inline -I "C:\Program Files\IAR     #
#                    Systems\Embedded Workbench 6.4                           #
#                    Evaluation\arm\CMSIS\Include\" -D ARM_MATH_CM4           #
#    List file    =  C:\Documents and Settings\kk\桌面\kinetis_sc\build\iar\h #
#                    ello_world\FLASH_128KB_PFLASH\List\lptmr.lst             #
#    Object file  =  C:\Documents and Settings\kk\桌面\kinetis_sc\build\iar\h #
#                    ello_world\FLASH_128KB_PFLASH\Obj\lptmr.o                #
#                                                                             #
#                                                                             #
###############################################################################

C:\Documents and Settings\kk\桌面\kinetis_sc\src\drivers\lptmr\lptmr.c
      1          /*
      2           * File:        lptmr.c
      3           * Purpose:     Provide common low power timer functions
      4           *
      5           * Notes:       Right now only function provided is used
      6           *              to generate a delay in ms. This driver
      7           *              could be expanded to include more functions
      8           *              in the future.
      9           *              
     10           */
     11          
     12          
     13          #include "common.h"
     14          #include "lptmr.h"
     15          
     16          /********************************************************************/
     17          /*
     18           * Initialize the low power time to provide a delay measured in ms.
     19           *
     20           *
     21           * Parameters:
     22           *  count_val   number of ms to delay
     23           *
     24           * Returns:
     25           * None
     26           */
     27          void time_delay_ms(uint32 count_val)
     28          {
     29            /* Make sure the clock to the LPTMR is enabled */
     30            SIM_SCGC5|=SIM_SCGC5_LPTIMER_MASK; 
     31            
     32            /* Set the compare value to the number of ms to delay */
     33            LPTMR0_CMR = count_val; 
     34            
     35            /* Set up LPTMR to use 1kHz LPO with no prescaler as its clock source */
     36            LPTMR0_PSR = LPTMR_PSR_PCS(1)|LPTMR_PSR_PBYP_MASK; 
     37            
     38            /* Start the timer */
     39            LPTMR0_CSR |= LPTMR_CSR_TEN_MASK; 
     40          
     41            /* Wait for counter to reach compare value */
     42            while (!(LPTMR0_CSR & LPTMR_CSR_TCF_MASK));
     43            
     44            /* Clear Timer Compare Flag */
     45            LPTMR0_CSR &= ~LPTMR_CSR_TEN_MASK;
     46            
     47            return;
     48          }
     49          
     50          void lptmr_isr(void)
     51          {
     52          //  printf("\n****LPT ISR entered*****\r\n");
     53          
     54            LPTMR0_CSR |=  LPTMR_CSR_TCF_MASK;   // write 1 to TCF to clear the LPT timer compare flag
     55            LPTMR0_CSR = ( LPTMR_CSR_TEN_MASK | LPTMR_CSR_TIE_MASK | LPTMR_CSR_TCF_MASK  );
     56                // enable timer
     57                // enable interrupts
     58                // clear the flag
     59          
     60          }

Errors: 1
Warnings: none
