#/*
# * File:		8KB_ram.lcf
# * Purpose:	Linker file for Kinetis devices with
# *
# * Notes:		code executing from RAM
# *
# */

MEMORY
{
    text    (RX) : ORIGIN = 0x1FFFF000,  LENGTH = 0x2000#ORIGIN = (0x20000000-(4*1024)),  LENGTH = (8*1024)
    data    (RW) : ORIGIN = AFTER(text), LENGTH = 0
    bss     (RW) : ORIGIN = AFTER(data), LENGTH = 0
}

SECTIONS
{
    __VECTOR_RAM      = 0x1FFFF000;#(0x20000000-(4*1024));
 
    .text :
    {
       .              = ALIGN(0x10);
       __VECTOR_TABLE = .;
       __exception_table_start__ = .;

       *(.vectortable)
       __exception_table_end__ = .;

       *(.text)
       .              = ALIGN(0x10);
	} > text

	.data :
	{
		. 				= ALIGN(0x10);
		__DATA_ROM 	= .;
		__DATA_RAM 	= .;
		*(.rodata)
		*(.sdata)
		*(.data)
		*(.relocate_code)
		*(.relocate_const)
		*(.relocate_data)
		. 				= ALIGN(0x10);
		__DATA_END 	= .;
	} > data
	
	.bss :
	{
		.                   = ALIGN(0x10);
		__START_BSS         = .;
		*(.sbss)
		*(SCOMMON)
		*(.bss)
		*(COMMON)
		__END_BSS           = .;
		. 					= ALIGN(0x10);
		__HEAP_START		= .;
		.					= . + (1*1024);
		__HEAP_END			= .;
		__SP_END			= .;
		.					= . + (1*1024);
		__BOOT_STACK_ADDRESS = .;
	} > bss

    ___BOOT_STACK_ADDRESS = __BOOT_STACK_ADDRESS;
    __SP_INIT = ___BOOT_STACK_ADDRESS;
    
    	__heap_addr    = __HEAP_START;
	__heap_size    = __HEAP_END - __HEAP_START;
	
    
}
