#/*
# * File:       linker.lcf
# * Purpose:    Linker file for Kinetis devices
# *
# * Notes:      Project running in internal Flash
# *
# */

MEMORY
{
    rom     (RX) : ORIGIN = 0x00000000,  LENGTH = 0x10000 #LENGTH=(64*1024)
    ram     (RW) : ORIGIN = 0x1FFFE410,  LENGTH = 0x3BF0#ORIGIN = (0x20000000-(8*1024)+0x410),LENGTH = (16*1024 - 0x410)
}

SECTIONS 
{
    __VECTOR_RAM       = 0x1FFFE000;#(0x20000000 - (8*1024));
    
    .text :
    {
       .               = ALIGN(0x10);
       __VECTOR_TABLE = .;
       __exception_table_start__ = .;

       *(.vectortable)
		
       __exception_table_end__ = .;
       *(.text)
       *(.rodata)
       .              = ALIGN(0x10);
       __DATA_ROM     = .;
    } > rom

    .data_bss : AT(__DATA_ROM)
    {
        __DATA_RAM     = .;
        *(.data)
        *(.sdata)
        *(.relocate_code)
        *(.relocate_const)
        *(.relocate_data)
        *(.test)
        __DATA_END     = .;
        .              = ALIGN(0x10);
        __START_BSS    = .;
        *(.sbss)
        *(SCOMMON)
        *(.bss)
        *(COMMON)
        __END_BSS      = .;
        .              = ALIGN(0x10);
        __HEAP_START   = .;
        .              = . + (1 * 1024);
        __HEAP_END     = .;
        __SP_END       = .;
		.          = . + (1 * 1024);
        __BOOT_STACK_ADDRESS = .;
    } > ram

    ___BOOT_STACK_ADDRESS = __BOOT_STACK_ADDRESS;
    __SP_INIT = ___BOOT_STACK_ADDRESS;
    
    	__heap_addr    = __HEAP_START;
	__heap_size    = __HEAP_END - __HEAP_START;
    
}
