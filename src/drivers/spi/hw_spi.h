//============================================================================
//文件名称：hw_spi.h
//功能概要：K60 SPI底层驱动程序头文件
//版权所有：苏州大学飞思卡尔嵌入式中心(sumcu.suda.edu.cn)
//============================================================================
#ifndef __SPI_H__
#define __SPI_H__

//1 头文件
#include "common.h"

//2 宏定义
//定义SPI口号
#define SPI_0 0


//定义主从机模式
enum spimode
{
	MASTER,    //主机模式
	SLAVE     //主机模式
};

//SPI0对应的IRQ中断号
#define SPI0IRQ 12

//                电路连接: SPI0的引脚连接
//                SPI0引脚                功能连接       
//                PTC4  		SS
//                PTC5  		SCK
//                PTC6  		SOUT
//                PTC7  		SIN
//=========================================================================
//函数名称：hw_spi_init
//函数参数：Master:是否是主机。
//函数返回：无
//功能概要：SPI初始化。
//=========================================================================
void hw_spi_init(uint8 master);
void SPI0_Init(void);
uint32 hw_spi_send_receive(uint16 ad_cfg);
//=========================================================================
//函数名称：hw_spi_send
//函数参数：data[]：需要发送的数据。
//          len：数据长度。
//函数返回：无
//功能概要：SPI发送数据。
//=========================================================================
void hw_spi_send(uint16 data[],uint32 len);

//=========================================================================
//函数名称：hw_spi_re
//函数参数：data[]：需要接收的数据。
//函数返回：0：成功 1：失败
//功能概要：SPI接收数据。
//=========================================================================
uint8 hw_spi_re(uint16 data[]);

//=========================================================================
//函数名称：hw_spi_enable_re_int
//参数说明：无
//函数返回： 无
//功能概要：开SPI接收中断
//=========================================================================
void hw_spi_enable_re_int(void);

//=========================================================================
//函数名称：hw_spi_disable_re_int
//参数说明：spiNo: SPI号
//函数返回： 无
//功能概要：关SPI接收中断
//=========================================================================
void hw_spi_disable_re_int(void);

void hw_spi_stop_transfer(void);

void hw_spi_start_transfer(void);

#endif //__SPI_H__
